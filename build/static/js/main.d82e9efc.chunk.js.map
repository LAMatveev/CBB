{"version":3,"sources":["Components/CheckboxList.js","Components/Popup.js","Components/LoginEmulator.js","Pages/NotFound.js","Pages/ManEdit.js","Components/DropDown.js","Components/Arg.js","Pages/RuleEdit.js","Components/NavHead.js","Pages/List.js","Pages/Login.js","Pages/AttributeEdit.js","Routes.js","index.js"],"names":["CheckboxList","data","checks","setChecks","display","setDisplay","hide","hidden","className","Form","Control","type","placeholder","onChange","e","searchjQuery","target","value","toLowerCase","displayedContacts","children","map","elem","id","description","indexOf","index","Check","checked","style","fontWeight","label","Popup","popup","setPopup","text","onClick","position","textAlign","height","width","backgroundColor","border","borderRadius","padding","zIndex","applyLogin","email","password","fetch","then","res","json","find","checklogin","token","NotFound","history","useHistory","fuckgoback","a","push","align","overflow","Button","left","fontFamily","fontSize","color","justifyContent","alignItems","ManEdit","man","useParams","parseInt","tkey","localStorage","getItem","path","window","location","toString","substring","lastIndexOf","arg","admin","creating","useState","name","setName","fathers_name","setFathersName","last_name","setLastName","setUsername","setPassword","attributes","setAttributes","displayed","setDisplayed","setText","elems","setElems","preventDefault","filter","x","JSON","stringify","useEffect","getattr","Promise","all","men","attr","findIndex","console","log","m","includes","to","flexDirection","justifyItems","alignContent","top","onSubmit","postForm","Group","size","controlId","Label","required","autoFocus","autoComplete","right","parse","DropDown","selector","getter","names","DropdownButton","onSelect","Number","title","Dropdown","Item","active","eventKey","Arg","t","st","o","so","c","sc","la","sla","lw","slw","d","sd","da","sda","workers","apply","val","def","func","TypeDD","RuleEdit","rule","daysFlag","setDaysFlag","suspend","setSuspend","setDescription","result","setResult","timeFlag","setTimeFlag","time","setTime","periodFlag","setPeriodFlag","period","setPeriod","setType","option","setOption","displayedWorkers","setDisplayedWorkers","workerList","setWorkerList","attributesList","setAttributesList","count","setCount","rules","setRules","setWorkers","arr","forEach","el","work","rul","undefined","r","suspended","timeflag","timefrom","timeto","periodflag","days","w","list","overflowX","bottom","marginRight","displayedAttributes","setDisplayedAttributes","maxWidth","disabled","idx","temp","NavHead","pdp","concat","Navbar","collapseOnSelect","bg","expand","Collapse","Nav","activeKey","pathname","variant","page","Link","href","removeItem","List","ex","setEx","url","method","status","exists","error","maxHeight","marginBottom","overflowY","minWidth","IconButton","Login","setEmail","login","ttok","setItem","AttributeEdit","attribute","setAttr","Routes","exact","component","from","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d82e9efc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Form} from \"react-bootstrap\";\r\nimport \"../Pages/Styles.css\"\r\n\r\nexport default function CheckboxList(data,checks,setChecks,display,setDisplay,hide){\r\n\r\n    function searchHandler(e) {\r\n        let searchjQuery = e.target.value.toLowerCase()\r\n        let displayedContacts = data.children.map((elem) => {\r\n            let searchValue = `(${elem.id}) ${elem.description}`.toLowerCase();\r\n            return (searchValue.indexOf(searchjQuery) !== -1);\r\n        })\r\n        setDisplay(displayedContacts)\r\n    }\r\n\r\n    return (\r\n        <div hidden={hide} className={\"box\"}>\r\n            <Form.Control type=\"text\" placeholder=\"Search\" onChange={searchHandler}/>\r\n            {data.children.map((elem, index) => ([\r\n                checks[index] = checks[index] != null ? checks[index] : false,\r\n                display[index] = display[index] != null ? display[index] : true,\r\n                display[index]\r\n                    ? <Form.Check key={elem.id} checked={checks[index]}\r\n                                  style={{display: \"flex\", fontWeight: \"bold\"}}\r\n                                  value={elem.id} type=\"checkbox\"\r\n                                  label={`(${elem.id}) ${elem.description}`}\r\n                                  onChange={(e) => {\r\n                                      checks[index] = e.target.checked;\r\n                                      setChecks(checks)\r\n                                  }}/>\r\n                    : null\r\n            ]))}\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport \"../Pages/Styles.css\"\r\n\r\nexport default function Popup(popup, setPopup, text) {\r\n    return (\r\n        <div hidden={!popup} onClick={() => setPopup(false)} style={{\r\n            position: \"absolute\",\r\n            textAlign: \"left\",\r\n            height: \"min-content\",\r\n            width: \"min-content\",\r\n            backgroundColor: \"#ffffff\",\r\n            border: \"solid black 1px\",\r\n            borderRadius: \"1rem\",\r\n            padding:\"20px\",\r\n            zIndex: 5\r\n        }}>\r\n            <pre>{text}</pre>\r\n        </div>\r\n    );\r\n}","export function applyLogin(email, password) {\r\n    return fetch(`http://localhost:3000/res/templates/Admins.json`)\r\n        .then((res) => res.json()).then((res) => {\r\n            if (email === 'admin@cbb.com' && password === 'adminpassword') {\r\n                return 'supertoken'\r\n            } else {\r\n                if (res.children.find((e) => e.email === email && e.password === password)) {\r\n                    return 'admintoken'\r\n                } else return null\r\n            }\r\n        })\r\n    /*let data = {\r\n            email: email,\r\n            password: password\r\n        }\r\n        return fetch(window.location, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(resp => resp.json())\r\n            .then(res => {\r\n                if (res.message) {\r\n                    setText(res.message)\r\n                } else {\r\n                    localStorage.setItem(\"token\", res.token)\r\n                    history.push('/Attributes')\r\n                }\r\n            })*/\r\n}\r\n\r\nexport function checklogin(token) {\r\n    if (token === 'supertoken') return 0\r\n    else if (token === 'admintoken') return 1\r\n    else return 403\r\n    /*\r\n        return fetch(window.location, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                token : token\r\n            }\r\n        })\r\n            .then(resp => resp.json())\r\n            .then(res => {\r\n               return res.reponse\r\n            })*/\r\n}","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./Styles.css\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function NotFound() {\r\n    let history = useHistory();\r\n    const fuckgoback = async (e) => {\r\n        history.push('/');\r\n    }\r\n    return (\r\n\r\n        <div align={\"center\"} style={{\r\n            backgroundColor: \"black\",\r\n            height: '100%',\r\n            position: \"relative\",\r\n            overflow:\"auto\"\r\n        }}>\r\n            <Button onClick={(e) => fuckgoback(e)} className={\"bbutton\"} style={{position:\"absolute\", left:\"0\", zIndex: \"4\"}}>FUCK! GO BACK!</Button>\r\n            <div className={\"fullscreen\"} style={{zIndex: 2}}>\r\n                <h1 style={{\r\n                    fontFamily: \"script\",\r\n                    fontSize: \"90em\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"red\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    display: \"flex\",\r\n                    width: \"100%\",\r\n                    height: \"100%\"\r\n                }} className={\"unselectable\"}>\r\n                    {'👁'}\r\n                </h1>\r\n            </div>\r\n            <div className={\"fullscreen\"} style={{zIndex: 3}}>\r\n                <h1 style={{\r\n                    fontFamily: \"Papyrus\",\r\n                    fontSize: \"15em\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"white\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    display: \"flex\",\r\n                    width: \"100%\",\r\n                    height: \"100%\"\r\n                }} className={\"unselectable\"}>\r\n                    {'Where are you going?\\n403'}\r\n                </h1>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {Redirect, useHistory, useParams} from \"react-router-dom\";\r\nimport CheckboxList from \"../Components/CheckboxList\";\r\nimport Popup from \"../Components/Popup\";\r\nimport {checklogin} from \"../Components/LoginEmulator\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nexport default function ManEdit() {\r\n    let {man} = useParams()\r\n    man = parseInt(man)\r\n    let tkey = checklogin(localStorage.getItem('token'))\r\n    let path = window.location.toString().substring(0, window.location.toString().lastIndexOf('/'))\r\n    let arg = path.substring(path.lastIndexOf('/'))\r\n    let admin = arg === '/Admins'\r\n    const creating = man === -1\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [fathers_name, setFathersName] = useState(\"\")\r\n    const [last_name, setLastName] = useState(\"\")\r\n    const [email, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const [attributes, setAttributes] = useState(null);\r\n    const [displayed, setDisplayed] = useState([])\r\n    const [checks, setChecks] = useState([]);\r\n\r\n    const [text, setText] = useState('')\r\n    const [popup, setPopup] = useState(false);\r\n    let history = useHistory();\r\n    const [elems, setElems] = useState(null)\r\n    useEffect(() => {\r\n        function getmen() {\r\n            return fetch(`http://localhost:3000/res/templates${arg}.json`)\r\n                .then((res) => res.json())\r\n        }\r\n\r\n        function getattr() {\r\n            if (!admin)\r\n                return fetch(`http://localhost:3000/res/templates/Attributes.json`)\r\n                    .then((res) => res.json())\r\n        }\r\n\r\n        function getall() {\r\n            return Promise.all([getmen(), getattr()])\r\n        }\r\n\r\n        if (!(tkey === 403 || (tkey === 1 && arg === '/Admins'))) getall().then(([men, attr]) => {\r\n            if (men !== null) if ((men.children.findIndex((e) => e.id === man) !== -1) && !(creating)) {\r\n                console.log(man)\r\n                let m = men.children.filter((e) => e.id === man)[0]\r\n                setFathersName(m.fathers_name)\r\n                setName(m.name)\r\n                setLastName(m.last_name)\r\n                setUsername(m.email)\r\n                setPassword(m.password)\r\n                if (!admin) setChecks(attr.children.map((elem) => m.attributes.includes(elem.id)))\r\n            }\r\n            setElems(men)\r\n            setAttributes(attr)\r\n        })\r\n    }, [admin, arg, creating, man, tkey])\r\n\r\n    async function postForm(e) {\r\n        e.preventDefault()\r\n        let data =\r\n            {\r\n                last_name: last_name,\r\n                name: name,\r\n                fathers_name: fathers_name,\r\n                email: email,\r\n                password: password\r\n            }\r\n        if (!admin) {\r\n            data.attributes = attributes.children.map((elem, index) => {\r\n                if (checks[index]) return elem.id\r\n                else return null\r\n            }).filter(x => x != null)\r\n        }\r\n        /*const response = await fetch(window.location, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'JWT': 'token'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });*/\r\n        setText(JSON.stringify(data, null, 2))\r\n        setPopup(true)\r\n        //return await response.json();\r\n    }\r\n\r\n    if (tkey === 403) {\r\n        return <Redirect to='/'/>\r\n    } else if (tkey === 1 && arg === '/Admins') return <NotFound/>\r\n    else if (elems == null || (attributes == null && !admin)) {\r\n        return null\r\n    } else if ((elems.children.findIndex((e) => e.id === man) === -1) && !(creating)) {\r\n        return <Redirect to={arg}/>\r\n    } else\r\n        return (\r\n            <div align={\"center\"} style={{\r\n                display: 'flex',\r\n                flexDirection: \"column\",\r\n                backgroundColor: \"#d9fffa\",\r\n                justifyItems: 'center',\r\n                justifyContent: 'space-evenly',\r\n                alignItems: 'center',\r\n                alignContent: \"space-evenly\",\r\n                height: '100%',\r\n                overflow: \"auto\"\r\n            }}>\r\n                {Popup(popup, setPopup, text)}\r\n                <Button\r\n                    className={\"bbutton\"}\r\n                    onClick={() =>\r\n                        history.push(arg)\r\n                    } style={{\r\n                    position: \"absolute\",\r\n                    left: \"0\",\r\n                    top: \"0\",\r\n                }}>Back</Button>\r\n                <h1 className={\"unselectable script\"}>{\r\n                    creating ? \"Create new person\" : \"Edit\"}\r\n                </h1>\r\n                <Form onSubmit={(e) => postForm(e)} style={{\r\n                    display: \"flex\", alignItems: \"center\",\r\n                    height: \"75%\"\r\n                }}>\r\n                    <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\r\n                        <Form.Group size=\"lg\" controlId=\"last_name\" style={{textAlign: \"center\"}}>\r\n                            <Form.Label>Last name</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                onChange={(e) => setLastName(e.target.value)}\r\n                                autoFocus\r\n                                autoComplete='on'\r\n                                type=\"text\"\r\n                                name=\"last_name\"\r\n                                value={last_name}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group size=\"lg\" controlId=\"name\" style={{textAlign: \"center\"}}>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                onChange={(e) => setName(e.target.value)}\r\n                                autoFocus\r\n                                autoComplete='on'\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={name}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group size=\"lg\" controlId=\"fathers_name\" style={{textAlign: \"center\"}}>\r\n                            <Form.Label>Father's name</Form.Label>\r\n                            <Form.Control\r\n                                onChange={(e) => setFathersName(e.target.value)}\r\n                                autoFocus\r\n                                autoComplete='on'\r\n                                type=\"text\"\r\n                                name=\"fathers_name\"\r\n                                value={fathers_name}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group size=\"lg\" controlId=\"email\" style={{textAlign: \"center\"}}>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                                autoFocus\r\n                                autoComplete='on'\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group size=\"lg\" controlId=\"password\" style={{textAlign: \"center\"}}>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                value={password}\r\n                            />\r\n                        </Form.Group>\r\n                        <Button\r\n                            type={\"submit\"}\r\n                            className={\"bbutton\"}\r\n                        >\r\n                            {creating ? \"Save\" : \"Edit\"}\r\n                        </Button>\r\n                    </div>\r\n                    {admin ? null : <div style={{position: \"absolute\", right: \"10%\", height: \"50%\", overflow: \"auto\"}}>\r\n                        {CheckboxList(attributes, JSON.parse(JSON.stringify(checks)), setChecks, displayed, setDisplayed)}</div>}\r\n                </Form>\r\n            </div>\r\n        );\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Dropdown, DropdownButton} from \"react-bootstrap\";\r\nimport \"../Pages/Styles.css\"\r\n\r\nexport default function DropDown(selector, getter ,names) {\r\n    return (\r\n        <div>\r\n            <DropdownButton onSelect={(e)=>selector(Number.parseInt(e))} title={names[getter]}>\r\n                {names.map((elem, index) => (\r\n                    <Dropdown.Item key = {elem} active={getter === index} eventKey={index}> {elem} </Dropdown.Item>\r\n                ))}\r\n            </DropdownButton>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport \"../Pages/Styles.css\"\r\nimport TypeDD from \"./DropDown\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport CheckboxList from \"./CheckboxList\";\r\n\r\nexport default function Arg(id, t, st, o, so, c, sc, la, sla, lw, slw, d, sd, da, sda, workers, attributes) {\r\n    function apply(val, def, func) {\r\n        let t = JSON.parse(JSON.stringify(def));\r\n        t[id] = val;\r\n        func(t)\r\n    }\r\n\r\n    return (\r\n        <div className={\"formgroup\"}>\r\n            {TypeDD((e) => apply(e, t, st), t[id], [\"id\", \"attribute\"])}\r\n            {TypeDD((e) => apply(e, o, so), o[id], [\"All in the list\", \"At least one in the list\"])}\r\n            {o[id] === 0 ? <Form.Control value={c[id]} style={{width: \"100%\"}} type=\"number\"\r\n                                         placeholder=\"Least participant count (blank or zero for all)\"\r\n                                         onChange={(e) => {\r\n                                             if (Number(e.target.value) <= 0) {\r\n                                                 e.target.value = ''\r\n                                                 apply(0, c, sc)\r\n                                                 return\r\n                                             }\r\n                                             apply(Number(e.target.value), c, sc)\r\n                                         }}/> : null}\r\n            {CheckboxList(workers, la[id], (e) => apply(e, la, sla),\r\n                d[id], (e) => apply(e, d, sd), t[id] !== 0)}\r\n            {CheckboxList(attributes, lw[id], (e) => apply(e, lw, slw),\r\n                d[id], (e) => apply(e, d, sd), t[id] === 0)\r\n            }</div>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {Redirect, useHistory, useParams} from \"react-router-dom\";\r\nimport Arg from \"../Components/Arg\";\r\nimport DropDown from \"../Components/DropDown\";\r\nimport Popup from \"../Components/Popup\";\r\nimport {checklogin} from \"../Components/LoginEmulator\";\r\n\r\nexport default function RuleEdit() {\r\n    let path = window.location.toString().substring(0, window.location.toString().lastIndexOf('/'))\r\n    let arg = path.substring(path.lastIndexOf('/'))\r\n    let {rule} = useParams();\r\n    rule = parseInt(rule)\r\n    let creating = rule === -1\r\n    let tkey = checklogin(localStorage.getItem('token'))\r\n    let history = useHistory();\r\n\r\n    let days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n    const [daysFlag, setDaysFlag] = useState([false, false, false, false, false, false, false]);\r\n\r\n    const [suspend, setSuspend] = useState(false);\r\n\r\n    const [description, setDescription] = useState('');\r\n    const [result, setResult] = useState(0);\r\n\r\n    const [timeFlag, setTimeFlag] = useState(false);\r\n    const [time, setTime] = useState([]);\r\n\r\n    const [periodFlag, setPeriodFlag] = useState(false);\r\n    const [period, setPeriod] = useState(null);\r\n\r\n    const [type, setType] = useState([0, 0]);\r\n    const [option, setOption] = useState([0, 0]);\r\n\r\n    const [displayedWorkers, setDisplayedWorkers] = useState([[], []])\r\n    const [displayedAttributes, setDisplayedAttributes] = useState([[], []])\r\n    const [workerList, setWorkerList] = useState([[], []]);\r\n    const [attributesList, setAttributesList] = useState([[], []]);\r\n\r\n    const [count, setCount] = useState([]);\r\n\r\n    const [rules, setRules] = useState(null);\r\n    const [workers, setWorkers] = useState(null);\r\n    const [attributes, setAttributes] = useState(null);\r\n\r\n    const [text, setText] = useState('')\r\n    const [popup, setPopup] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        function getworkers() {\r\n            return fetch(`http://localhost:3000/res/templates/Workers.json`)\r\n                .then((res) => res.json())\r\n        }\r\n\r\n        function getattributes() {\r\n            return fetch(`http://localhost:3000/res/templates/Attributes.json`)\r\n                .then((res) => res.json())\r\n        }\r\n\r\n        function getrules() {\r\n            return fetch(`http://localhost:3000/res/templates/Rules.json`)\r\n                .then((res) => res.json())\r\n        }\r\n\r\n        function getall() {\r\n            return Promise.all([getworkers(), getattributes(), getrules()])\r\n        }\r\n\r\n        if (tkey !== 403) getall().then(([work, attr, rul]) => {\r\n            setWorkers(work)\r\n            setAttributes(attr)\r\n            setRules(rul)\r\n            if (work !== null && attr != null &&\r\n                rul.children.find((e) => e.id === rule) !== undefined &&\r\n                !(creating)) {\r\n                let r = rul.children.find((e) => e.id === rule)\r\n                setDescription(r.description)\r\n                setSuspend(r.suspended)\r\n                setResult(r.result)\r\n                setTimeFlag(r.timeflag)\r\n                setTime([r.timefrom, r.timeto])\r\n                setPeriodFlag(r.periodflag)\r\n                setPeriod(r.period)\r\n                setDaysFlag(r.days)\r\n                setType([r.children[0].type, r.children[1].type])\r\n                setOption([r.children[0].option, r.children[1].option])\r\n                setCount([r.children[0].count, r.children[1].count])\r\n                setWorkerList(r.children.map((elem) =>\r\n                    work.children.map((w) => {\r\n                        return elem.type === 0 ? elem.list.includes(w.id) : null\r\n                    })\r\n                ))\r\n                setAttributesList(r.children.map((elem) =>\r\n                    work.children.map((w) => {\r\n                        return elem.type === 1 ? elem.list.includes(w.id) : null\r\n                    })\r\n                ))\r\n            }\r\n        })\r\n\r\n\r\n    }, [creating, rule, tkey])\r\n\r\n\r\n    async function postForm(e) {\r\n        e.preventDefault()\r\n        let data =\r\n            {\r\n                \"description\": description,\r\n                \"suspended\": suspend,\r\n                \"result\": result,\r\n                \"timeflag\": timeFlag,\r\n                \"timefrom\": time[0],\r\n                \"timeto\": time[1],\r\n                \"periodflag\": periodFlag,\r\n                \"period\": period ? period : 0,\r\n                \"days\": daysFlag\r\n            }\r\n        let arr = [0, 1]\r\n        data.children = [null, null]\r\n        arr.forEach((el) => {\r\n            data.children[el] = {\r\n                \"type\": type[el],\r\n                \"option\": option[el],\r\n                \"list\": (type[el] === 0 ? workers.children.map((elem, index) => {\r\n                    if (workerList[el][index]) {\r\n                        return elem.id\r\n                    } else return null\r\n                }) : attributes.children.map((elem, index) => {\r\n                    return attributesList[el][index] ? elem.id : null\r\n                }))\r\n                    .filter(x => x != null),\r\n                \"count\": (count[el] == null ? 0 : count[el])\r\n            }\r\n\r\n        })\r\n        /*const response = await fetch(window.location, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'JWT': localStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify(data)\r\n        });*/\r\n        setText(JSON.stringify(data, null, 2))\r\n        setPopup(true)\r\n        //return await response.json();\r\n    }\r\n\r\n    if (tkey === 403) {\r\n        return <Redirect to='/'/>\r\n    } else if (rules == null || workers == null || attributes == null) {\r\n        return null\r\n    } else {\r\n        if ((rules.children.find((e) => e.id === rule) === undefined) && !(creating)) {\r\n            return <Redirect to={arg}/>\r\n        } else\r\n            return (\r\n                <div align={\"center\"} style={{\r\n                    display: 'flex',\r\n                    flexDirection: \"column\",\r\n                    backgroundColor: \"#d9fffa\",\r\n                    justifyItems: 'center',\r\n                    alignItems: 'center',\r\n                    alignContent: \"space-evenly\",\r\n                    height: '100%',\r\n                    overflow: \"auto\"\r\n                }}>\r\n                    {Popup(popup, setPopup, text)}\r\n                    <Button onClick={() => {\r\n                        history.push(arg)\r\n                    }} className={\"bbutton\"} style={{\r\n                        position: \"absolute\",\r\n                        left: \"10px\",\r\n                        top: \"10px\",\r\n                    }}>Back</Button>\r\n                    <h1 className={\"unselectable script\"}>{\r\n                        creating ? \"Create new rule\" : \"Edit\"}\r\n                    </h1>\r\n                    <div style={{\r\n                        flexDirection: \"row\",\r\n                        display: \"flex\",\r\n                        width: \"100%\",\r\n                        justifyContent: \"space-evenly\",\r\n                        overflowX: \"auto\",\r\n                        position: \"relative\",\r\n                        top: \"10%\",\r\n                        height: \"70%\"\r\n                    }}>\r\n                        <Form onSubmit={(e) => postForm(e)} style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            width: \"100%\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"space-evenly\",\r\n                            overflowX: \"auto\",\r\n                            height: \"100%\"\r\n                        }}>\r\n                            <Button\r\n                                type={\"submit\"}\r\n                                className={\"bbutton\"}\r\n                                style={{\r\n                                    position: \"absolute\",\r\n                                    right: \"10px\",\r\n                                    bottom: \"10px\",\r\n                                    backgroundColor: \"green\",\r\n                                }}>\r\n                                {creating ? \"Save\" : \"Edit\"}\r\n                            </Button>\r\n                            <div style={{\r\n                                display: \"flex\",\r\n                                width: \"100%\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"center\"\r\n                            }}>\r\n                                <Form.Check\r\n                                    onChange={(e) => setSuspend(e.target.checked)}\r\n                                    checked={suspend}\r\n                                    style={{fontWeight: \"bolder\", color: (suspend ? 'red' : 'grey'), marginRight: 20}}\r\n                                    label={\"Suspended\"}/>\r\n                                <Form.Control required type={\"text\"}\r\n                                              value={description}\r\n                                              placeholder=\"Description\"\r\n                                              style={{width: \"50%\", textAlign: 'center'}}\r\n                                              onChange={(e) => setDescription(e.target.value)}/></div>\r\n                            <div style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"space-evenly\",\r\n                                width: \"100%\",\r\n                                alignItems: \"center\",\r\n                                height: \"90%\"\r\n                            }}>\r\n                                <h1 className={\"unselectable script\"}>{\r\n                                    \"If\"}\r\n                                </h1>\r\n                                {\r\n                                    Arg(0,\r\n                                        type, setType,\r\n                                        option, setOption,\r\n                                        count, setCount,\r\n                                        workerList, setWorkerList,\r\n                                        attributesList, setAttributesList,\r\n                                        displayedWorkers, setDisplayedWorkers,\r\n                                        displayedAttributes, setDisplayedAttributes,\r\n                                        workers, attributes)\r\n                                }\r\n                                <div style={{\r\n                                    display: \"flex\",\r\n                                    flexDirection: \"column\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\"\r\n                                }}>\r\n                                    <h1 style={{width: \"min-content\"}} className={\"unselectable script\"}>\r\n                                        {\"contacts\"}\r\n                                    </h1>\r\n                                    <h1 style={{width: \"min-content\"}} className={\"unselectable script\"}>\r\n                                        {\"with\"}\r\n                                    </h1>\r\n                                </div>\r\n                                {\r\n                                    Arg(1,\r\n                                        type, setType,\r\n                                        option, setOption,\r\n                                        count, setCount,\r\n                                        workerList, setWorkerList,\r\n                                        attributesList, setAttributesList,\r\n                                        displayedWorkers, setDisplayedWorkers,\r\n                                        displayedAttributes, setDisplayedAttributes,\r\n                                        workers, attributes)\r\n                                }\r\n                                <div style={{\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                    flexDirection: \"column\",\r\n                                    maxWidth: \"20%\"\r\n                                }}>\r\n                                    <Form.Check checked={timeFlag} type={\"checkbox\"} label={\"At time\"}\r\n                                                className={\"unselectable script\"}\r\n                                                style={{justifyContent: \"flex-start\"}}\r\n                                                onChange={(e) => setTimeFlag(e.target.checked)}/>\r\n                                    From\r\n                                    <Form.Control required value={time[0]} disabled={!timeFlag} style={{width: \"min-content\"}}\r\n                                                  type={\"time\"}\r\n                                                  onChange={(e) => setTime([e.target.value, time[1]])}/>\r\n                                    To\r\n                                    <Form.Control required value={time[1]} disabled={!timeFlag} style={{width: \"min-content\"}}\r\n                                                  type={\"time\"}\r\n                                                  onChange={(e) => setTime([time[0], e.target.value])}/>\r\n                                    <Form.Check checked={periodFlag} type={\"checkbox\"} label={\"0nce every x mins\"}\r\n                                                className={\"unselectable script\"}\r\n                                                style={{justifyContent: \"flex-start\"}}\r\n                                                onChange={(e) => setPeriodFlag(e.target.checked)}/>\r\n                                    <Form.Control disabled={!periodFlag} value={period} style={{width: \"100%\"}}\r\n                                                  type=\"number\"\r\n                                                  placeholder=\"Blank or zero for single trigger\"\r\n                                                  onChange={(e) => {\r\n                                                      if (Number(e.target.value) < 0) {\r\n                                                          e.target.value = ''\r\n                                                      }\r\n                                                      setPeriod(Number(e.target.value))\r\n                                                  }}/>\r\n                                </div>\r\n                                <h1 className={\"unselectable script\"}>\r\n                                    {\"then\"}\r\n                                </h1>\r\n                                <div style={{display: \"flex\", alignItems: \"center\"}}>\r\n                                    {DropDown(setResult, result, ['Do not send signal', 'Send signal'])}\r\n                                </div>\r\n                            </div>\r\n                            <div style={{display: \"flex\"}}>\r\n                                {\r\n                                    days.map((elem, idx) => {\r\n                                        return <Button onClick={(e) => {\r\n                                            let temp = [...daysFlag]\r\n                                            temp[idx] = !temp[idx]\r\n                                            setDaysFlag(temp)\r\n                                        }} style={{backgroundColor: (daysFlag[idx] ? 'green' : 'grey')}}>{elem}</Button>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Nav, Navbar} from \"react-bootstrap\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport \"../Pages/Styles.css\"\r\nimport {checklogin} from \"./LoginEmulator\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport default function NavHead() {\r\n    let {id} = useParams()\r\n    let history = useHistory()\r\n    let tkey = checklogin(localStorage.getItem('token'))\r\n    if (tkey === 403) {\r\n        history.push('/')\r\n    }\r\n    function logout(){\r\n        localStorage.removeItem('token')\r\n        history.push('/')\r\n    }\r\n    let pdp = (tkey === 0 ? ['Admins'] : []).concat(['Workers', 'Attributes', 'Rules'])\r\n    return (\r\n        <div style={{zIndex: 2, width: '100%'}}>\r\n            <Navbar collapseOnSelect bg=\"light\" expand=\"md\" className=\"mb-3\">\r\n                <Navbar.Collapse className=\"justify-content-center\">\r\n                    <Nav activeKey={window.location.pathname}\r\n                         variant={'pills'}>\r\n                        {pdp.map((page) => (\r\n                            <Nav.Link disabled={id === page} key={page} href={`/${page}`}>{page}</Nav.Link>))}\r\n                        <Button style={{position: 'absolute', right: 10}} onClick={logout}>Logout</Button>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport \"./Styles.css\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport NavHead from \"../Components/NavHead\";\r\nimport NotFound from \"./NotFound\";\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\r\nimport Popup from \"../Components/Popup\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport {Form} from \"react-bootstrap\";\r\nimport {checklogin} from \"../Components/LoginEmulator\";\r\n\r\nexport default function List() {\r\n    let tkey = checklogin(localStorage.getItem('token'))\r\n    let {id} = useParams()\r\n    const [ex, setEx] = useState(true);\r\n\r\n    const [elems, setElems] = useState(null);\r\n    const [display, setDisplay] = useState([]);\r\n\r\n    const [text, setText] = useState('')\r\n    const [popup, setPopup] = useState(false);\r\n\r\n    async function exists(url) {\r\n        const result = await fetch(url, {method: 'HEAD'});\r\n        return result.status !== 404;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!(tkey === 403 || (tkey === 1 && id === 'Admins')))\r\n            exists(`http://localhost:3000/res/templates/${id}.json`)\r\n                .then(\r\n                    (e) => {\r\n                        if (!e) {\r\n                            setEx(false)\r\n                        }\r\n                    })\r\n                .then(() =>\r\n                    fetch(`http://localhost:3000/res/templates/${id}.json`)\r\n                        .then(\r\n                            res =>\r\n                                res.json()\r\n                        )\r\n                        .then(\r\n                            (result) => {\r\n                                setElems(result)\r\n                            },\r\n                            (error) => {\r\n                                return <div>{{error}}</div>\r\n                            }\r\n                        ))\r\n    }, [id, tkey])\r\n\r\n    async function postForm(id) {\r\n        let data =\r\n            {\r\n                \"id\": id\r\n            }\r\n        /*const response = await fetch(window.location, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'JWT':\r\n            },\r\n            body: JSON.stringify(data)\r\n        });*/\r\n        setText(JSON.stringify(data, null, 2))\r\n        setPopup(true)\r\n        //return await response.json();\r\n    }\r\n\r\n    function searchHandler(e) {\r\n        let searchjQuery = e.target.value.toLowerCase()\r\n        let displayedContacts = elems.children.map((elem) => {\r\n            let searchValue = `${elem.description}`.toLowerCase();\r\n            return (searchValue.indexOf(searchjQuery) !== -1);\r\n        })\r\n        setDisplay(displayedContacts)\r\n    }\r\n\r\n    if (tkey === 403 || !ex) {\r\n        return <Redirect to='/'/>\r\n    } else if (tkey === 1 && id === 'Admins') return <NotFound/>\r\n    else if (elems == null) {\r\n        return null\r\n    } else\r\n\r\n        return (\r\n            <div align={\"center\"} style={{\r\n                height: '100%',\r\n                position: \"relative\",\r\n                overflow: \"auto\"\r\n            }}>\r\n                <div key={id} align={\"center\"} style=\r\n                    {{\r\n                        display: 'flex',\r\n                        flexDirection: \"column\",\r\n                        backgroundColor: \"#d9fffa\",\r\n                        justifyItems: 'center',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center',\r\n                        //alignContent: \"center\",\r\n                        height: '100%',\r\n                        overflow: \"auto\"\r\n                    }}\r\n                >\r\n                    <div style={{width: \"100%\", height: \"min-content\", maxHeight: \"30%\"}}>\r\n                        <NavHead/>\r\n                        <div style={{width: \"100%\"}}>\r\n                            <h1 className={\"unselectable script\"}>\r\n                                {`Corporate Big Br👁ther`}\r\n                            </h1>\r\n                            <h1 className={\"script\"}>\r\n                                {`${id}`}\r\n                            </h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{\r\n                        width: \"100%\",\r\n                        height: \"70%\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\"\r\n                    }}>\r\n                        <Form.Control style={{width: \"50%\", textAlign: \"center\", zIndex: \"2\", marginBottom: \"20px\"}}\r\n                                      type=\"text\"\r\n                                      placeholder=\"Search\"\r\n                                      onChange={searchHandler}/>\r\n                        <div style={{\r\n                            display: 'flex',\r\n                            flexDirection: \"column\",\r\n                            justifyItems: 'center',\r\n                            alignItems: 'center',\r\n                            height: \"min-content\",\r\n                            maxHeight: '50%',\r\n                            overflowY: \"auto\",\r\n                            zIndex: 3,\r\n                            width: \"auto\",\r\n                            minWidth: \"50%\",\r\n                            backgroundColor: \"#d9fffa\",\r\n                            padding: \"10px\",\r\n                            border: \"solid darkblue 2px\",\r\n                            borderRadius: \"1rem\"\r\n                        }}>\r\n                            {Popup(popup, setPopup, text)}\r\n                            <Button style={{marginBottom: \"1em\"}} className={'round'} key={-1}\r\n                                    href={`/${id}/-1`}>{'➕'}</Button>\r\n                            {\r\n                                elems.children.map((elem, index) => ([\r\n                                        display[index] = display[index] != null ? display[index] : true,\r\n                                        display[index]\r\n                                            ?\r\n                                            <div style={{display: \"flex\", alignItems: \"center\"}}>\r\n                                                <Button style={{marginRight: \"10px\"}} key={elem.id}\r\n                                                        href={`/${id}/${elem.id}`}>{elem.description}</Button>\r\n                                                <IconButton children={<DeleteIcon style={{\r\n                                                    backgroundColor: \"#e8220dba\",\r\n                                                    color: \"white\",\r\n                                                    borderRadius: '1rem',\r\n                                                    width: \"40px\",\r\n                                                    height: \"40px\",\r\n                                                }}/>} onClick={() => postForm(elem.id)}/>\r\n                                            </div> : null]\r\n                                ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./Styles.css\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {applyLogin, checklogin} from '../Components/LoginEmulator'\r\n\r\nexport default function Login() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [text, setText] = useState('');\r\n\r\n    let history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (checklogin(localStorage.getItem('token')) !== 403) {\r\n            history.push('/Attributes')\r\n        }\r\n    })\r\n\r\n    const login = async (e) => {\r\n        e.preventDefault();\r\n\r\n        applyLogin(email, password).then((ttok) => {\r\n            if (ttok === null) setText('Invalid email or password')\r\n            else {\r\n                localStorage.setItem(\"token\", ttok)\r\n                history.push('/Attributes')\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div align={\"center\"} style={{\r\n            display: 'flex',\r\n            flexDirection: \"column\",\r\n            backgroundColor: \"#d9fffa\",\r\n            justifyItems: 'center',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            alignContent: \"space-evenly\",\r\n            height: '100%',\r\n            overflow: \"auto\"\r\n        }}>\r\n            <h1 className={\"script\"}>{\r\n                'Corporate Big Br👁ther'}\r\n            </h1>\r\n            <h2>{text}</h2>\r\n            <Form id=\"login\" style={{display: \"grid\", alignItems: \"center\"}} onSubmit={(e) => login(e)}>\r\n                <Form.Group size=\"lg\" controlId=\"email\" style={{textAlign: \"center\"}}>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        className={email === '' ? \"error\" : ''}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        autoFocus\r\n                        autoComplete='on'\r\n                        type=\"email\"\r\n                        name=\"email\"/>\r\n                </Form.Group>\r\n                <Form.Group size=\"lg\" controlId=\"password\" style={{textAlign: \"center\"}}>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        className={password === '' ? \"error\" : ''}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        type=\"password\"\r\n                        name=\"password\"/>\r\n                </Form.Group>\r\n                <Button type={\"submit\"}\r\n                        className={Button}>Login</Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {Redirect, useHistory, useParams} from \"react-router-dom\";\r\nimport Popup from \"../Components/Popup\";\r\nimport {checklogin} from \"../Components/LoginEmulator\";\r\n\r\nlet path = window.location.toString().substring(0, window.location.toString().lastIndexOf('/'))\r\nlet arg = path.substring(path.lastIndexOf('/'))\r\n\r\nexport default function AttributeEdit() {\r\n    let {attribute} = useParams();\r\n    attribute = parseInt(attribute)\r\n    let tkey = checklogin(localStorage.getItem('token'))\r\n    const [attr, setAttr] = useState('');\r\n    let history = useHistory();\r\n    const [attributes, setAttributes] = useState(null);\r\n\r\n    const [text, setText] = useState('')\r\n    const [popup, setPopup] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (tkey !== 403)\r\n            fetch(`http://localhost:3000/res/templates/Attributes.json`)\r\n                .then(\r\n                    res =>\r\n                        res.json()\r\n                )\r\n                .then(\r\n                    (result) => {\r\n                        setAttributes(result)\r\n                        if (result.children.find((e) => e.id === attribute) !== undefined)\r\n                            setAttr(result.children.find((e) => e.id === attribute).description)\r\n                    },\r\n                    (error) => {\r\n                        return <div>{{error}}</div>\r\n                    }\r\n                )\r\n\r\n    }, [attribute, tkey])\r\n\r\n    async function postForm(e) {\r\n        e.preventDefault()\r\n        let data =\r\n            {\r\n                \"description\": attr,\r\n            }\r\n        /*const response = await fetch(window.location, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'JWT': 'token'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });*/\r\n\r\n        setText(JSON.stringify(data, null, 2))\r\n        setPopup(true)\r\n        //return await response.json();\r\n    }\r\n\r\n    if (tkey === 403) {\r\n        return <Redirect to='/'/>\r\n    } else if (attributes == null) {\r\n        return null\r\n    } else if (!attributes.children.find((e) => e.id === attribute) && !(attribute === -1)) {\r\n        return <Redirect to={arg}/>\r\n    } else\r\n        return (\r\n            <div align={\"center\"} style={{\r\n                display: 'flex',\r\n                flexDirection: \"column\",\r\n                backgroundColor: \"#d9fffa\",\r\n                justifyItems: 'center',\r\n                alignItems: 'center',\r\n                alignContent: \"center\",\r\n                height: '100%',\r\n                overflow: \"auto\"\r\n            }}>\r\n                <Button\r\n                    className={\"bbutton\"}\r\n                    onClick={() => {\r\n                        history.push(arg)\r\n                    }} style={{\r\n                    position: \"absolute\",\r\n                    left: \"10px\",\r\n                    top: \"10px\",\r\n                }}>Back</Button>\r\n                <h1 className={\"unselectable script\"}>{\r\n                    attribute === -1 ? \"Create new attribute\" : \"Edit\"}\r\n                </h1>\r\n                <Form\r\n                    onSubmit={(e) => postForm(e)}\r\n                    style={{width: '100%', height: '100%'}}>\r\n\r\n                    <Button\r\n                        type={\"submit\"}\r\n                        className={\"bbutton\"}\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            right: \"10px\",\r\n                            bottom: \"10px\",\r\n                            backgroundColor: \"green\",\r\n                            zIndex: \"2\",\r\n                        }}>\r\n                        {attribute === -1 ? \"Save\" : \"Edit\"}\r\n                    </Button>\r\n\r\n                    <div style={{\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\"\r\n                    }}>\r\n                        {Popup(popup, setPopup, text)}\r\n                        <Form.Control required\r\n                                      type={\"text\"}\r\n                                      value={attr}\r\n                                      placeholder=\"Attribute\"\r\n                                      style={{width: \"50%\", textAlign: \"center\"}}\r\n                                      onChange={(e) => setAttr(e.target.value)}/>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport ManEdit from \"./Pages/ManEdit\";\r\nimport RuleEdit from \"./Pages/RuleEdit\";\r\nimport NotFound from \"./Pages/NotFound\";\r\nimport List from \"./Pages/List\";\r\nimport Login from \"./Pages/Login\";\r\nimport AttributeEdit from \"./Pages/AttributeEdit\";\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Login}/>\r\n            <Route exact path=\"/:id\" component={List}/> {/*remove for 404*/}\r\n            <Route exact path=\"/Workers/:man\" component={ManEdit}/>\r\n            <Route exact path=\"/Admins/:man\" component={ManEdit}/>\r\n            <Route exact path=\"/Rules/:rule\" component={RuleEdit}/>\r\n            <Route exact path=\"/Attributes/:attribute\" component={AttributeEdit}/>\r\n            <Route exact path=\"/Access_denied\" component={NotFound}/>\r\n            <Redirect from=\"/\" to=\"/Attributes\"/>\r\n            <Redirect from=\"*\" to=\"/\"/>\r\n        </Switch>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {BrowserRouter as Router,} from 'react-router-dom';\r\nimport Routes from \"./Routes\"\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Router>\r\n            <Routes/>\r\n        </Router>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}